#!/usr/bin/env bash

PWD=$(cd "$(dirname "${BASH_SOURCE}")" && pwd)

function show_help() {
cat <<- EOF
bootstrap [options]
OPTIONS:
  -v verbose mode
  -h help message
EOF
}

function echo_info() {
  echo -ne "\e[0;34m"
  echo "$1"
  echo -ne "\e[0m"
}

function echo_success() {
  echo -ne "\e[0;32m"
  echo "$1"
  echo -ne "\e[0m"
}

function echo_error() {
  echo -ne "\e[0;31m"
  echo "$1"
  echo -ne "\e[0m"
}

function echo_warning() {
  echo -ne "\e[0;33m"
  echo "$1"
  echo -ne "\e[0m"
}

function echo_ok() {
  echo_success "[OK]"
}

function echo_failed() {
  echo_error "[FAILED]"
}

function echo_logo() {
  echo_info "********************************"
  echo_info "*  ╔═════╗ ╦═════╗ ╔═════╗     *"
  echo_info "*  ║     ║ ║     ║ ║     ║     *"
  echo_info "*  ║     ║ ║     ║ ╠═════╝     *"
  echo_info "*  ║     ║ ║     ║ ║           *"
  echo_info "*  ╚═════╝ ╩     ╩ ╚═════╝  ♥  *"
  echo_info "********************************"
}

function main() {
  # make sure all submodules are initialized
  git submodule update --init --recursive

  OUT_REDIRECT="> /dev/null"
  case $1 in
    -v)
      OUT_REDIRECT="";;
    -h)
      show_help
      ;;
    *)
      shift
      ;;
  esac

  echo "Welcome to One."

  # OS detection
  OS_SUFFIX="linux"
  if [[ "$(uname -s)" == "Darwin" ]];then
    OS_SUFFIX="osx"
  fi

  # find script named install.sh and or install_os.sh
  INSTALLERS=$(find "$PWD" -maxdepth 2 -name install.sh)
  INSTALLERS_SPEC=$(find "$PWD" -maxdepth 2 -name install_$OS_SUFFIX.sh)
  ALL_INSTALLERS="$INSTALLERS $INSTALLERS_SPEC"

  # run all scripts
  for INSTALLER in $ALL_INSTALLERS;do
    echo -n "Running $INSTALLER ... "
    if eval source $INSTALLER $OUT_REDIRECT;then
      echo_ok
    else
      echo_error
    fi
  done

  echo_logo
  echo_success "Success!Enjoy One."
}

main $@