#!/usr/bin/env bash

OD_INFO_OK="[OK]"
OD_INFO_FAILED="[FAILED]"
OD_INFO_ACTION="==>"

##################################################
## os detection
function od_is_osx() {
  [[ "$(uname -s)" == "Darwin" ]] || return 1
}

function od_is_ubuntu() {
  [[ -e "/etc/issue" ]] || return 1
  [[ "$(cat /etc/issue)" =~ "Ubuntu" ]] || return 1
}

function od_unknown_os() {
  od_is_osx && return 1
  od_is_ubuntu && return 1
}

##################################################
## colors
OD_ESC_SEQ="\e["
if od_is_osx;then
  OD_ESC_SEQ="\x1b["
fi

OD_COLOR_RESET=$OD_ESC_SEQ"0m"
OD_FG_RED=$OD_ESC_SEQ"0;31m"
OD_FG_GREEN=$OD_ESC_SEQ"0;32m"
OD_FG_YELLOW=$OD_ESC_SEQ"0;33m"
OD_FG_BLUE=$OD_ESC_SEQ"0;34m"
OD_FG_MAGENTA=$OD_ESC_SEQ"0;35m"
OD_FG_CYAN=$OD_ESC_SEQ"0;36m"
OD_FG_RED_BOLD=$OD_ESC_SEQ"1;31m"
OD_FG_GREEN_BOLD=$OD_ESC_SEQ"1;32m"
OD_FG_YELLOW_BOLD=$OD_ESC_SEQ"1;33m"
OD_FG_BLUE_BOLD=$OD_ESC_SEQ"1;34m"
OD_FG_MAGENTA_BOLD=$OD_ESC_SEQ"1;35m"
OD_FG_CYAN_BOLD=$OD_ESC_SEQ"1;36m"

##################################################
## echo functions
# colored echo
function od_echo_colored() {
  echo -e "$1$2${OD_COLOR_RESET}"
}

# stats
function od_echo_info() {
  od_echo_colored ${OD_FG_BLUE} "$1"
}

function od_echo_success() {
  od_echo_colored ${OD_FG_GREEN} "$1"
}

function od_echo_warn() {
  od_echo_colored ${OD_FG_YELLOW} "$1"
}

function od_echo_error() {
  od_echo_colored ${OD_FG_RED} "$1"
}

# others
function od_echo_return() {
  echo ""
}

function od_echo_exec_stat() {
  if [[ $? == 0 ]];then
    od_echo_success ${OD_INFO_OK}
  else
    od_echo_error ${OD_INFO_FAILED}
  fi
}

function od_echo_logo() {
  od_echo_info "********************************"
  od_echo_info "*  ╔═════╗ ╦═════╗ ╔═════╗     *"
  od_echo_info "*  ║     ║ ║     ║ ║     ║     *"
  od_echo_info "*  ║     ║ ║     ║ ╠═════╝     *"
  od_echo_info "*  ║     ║ ║     ║ ║           *"
  od_echo_info "*  ╚═════╝ ╩     ╩ ╚═════╝  ♥  *"
  od_echo_info "********************************"
}

##################################################
## action functions
function od_action_link() {
  echo -n "$(od_echo_colored ${OD_FG_CYAN} ${OD_INFO_ACTION}) linking $1 -> $2 ... "
  ln -fs "$1" "$2"
  od_echo_exec_stat
}

function od_action_linkdir() {
  local options="-dfs"
  if od_is_osx;then
    options="-Ffs"
  fi

  echo -n "$(od_echo_colored ${OD_FG_CYAN} ${OD_INFO_ACTION}) linking $1 -> $2 ... "
  ln $options "$1" "$2"
  od_echo_exec_stat
}

function od_action_copy() {
  echo -n "$(od_echo_colored ${OD_FG_YELLOW} ${OD_INFO_ACTION}) copying $1 -> $2 ... "
  cp -r "$1" "$2"
  od_echo_exec_stat
}

function od_action_mv() {
  echo -n "$(od_echo_colored ${OD_FG_YELLOW} ${OD_INFO_ACTION}) moving $1 -> $2 ... "
  mv -r "$1" "$2"
  od_echo_exec_stat
}

function od_action_rm() {
  echo -n "$(od_echo_colored ${OD_FG_RED} ${OD_INFO_ACTION}) removing $1 ... "
  rm -rf "$1"
  od_echo_exec_stat
}

##################################################
## packge managers
function od_brew_install() {
  if brew list $1 &> /dev/null;then
    # already installed
    echo -n "$(od_echo_colored ${OD_FG_GREEN} ${OD_INFO_ACTION}) installing $1 ... "
    od_echo_exec_stat
  else
    echo -n "$(od_echo_colored ${OD_FG_GREEN} ${OD_INFO_ACTION}) installing $1 ... "
    brew install $1 &> /dev/null
    od_echo_exec_stat
  fi
}

function od_apt_get_install() {
  echo -n ""
}

function od_gem_install() {
  if gem list -i $1 &> /dev/null;then
    # already installed
    echo -n "$(od_echo_colored ${OD_FG_GREEN} ${OD_INFO_ACTION}) installing $1 ... "
    od_echo_exec_stat
  else
    echo -n "$(od_echo_colored ${OD_FG_GREEN} ${OD_INFO_ACTION}) installing $1 ... "
    gem install $1 &> /dev/null
    od_echo_exec_stat
  fi
}

##################################################
## others
# script path
function od_pwd() {
  cd "$(dirname "${BASH_SOURCE[1]}")" && pwd
}

# ask for sudo permissions
function od_sudo() {
  od_echo_warn "To install powerful packages,need sudo permission:)"
  sudo -v

  # Keep-alive: update existing sudo time stamp until the script has finished
  while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
}

# check command
function od_has() {
  if hash $1 &> /dev/null;then
    return
  fi
  return 1
}